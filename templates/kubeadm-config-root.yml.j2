apiVersion: kubeadm.k8s.io/v1alpha2
kind: MasterConfiguration
kubernetesVersion: v1.11.0
apiServerCertSANs:
- "{{ kubernetes.load_balancer.dns }}"
{% if kubernetes.load_balancer.extra_sans is defined %}
{% for san in kubernetes.load_balancer.extra_sans %}
- "{{ san }}"
{% endfor %}
{% endif %}
api:
    controlPlaneEndpoint: "{{ kubernetes.load_balancer.dns }}:{{ kubernetes.load_balancer.port }}"
etcd:
  local:
    extraArgs:
      listen-client-urls: "https://127.0.0.1:2379,https://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}:2379"
      advertise-client-urls: "https://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}:2379"
      listen-peer-urls: "https://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}:2380"
      initial-advertise-peer-urls: "https://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}:2380"
      initial-cluster: "{{ ansible_fqdn }}=https://{{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}:2380"
      name: "{{ ansible_fqdn }}"
    serverCertSANs:
      - {{ ansible_fqdn }}
      - {{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}
    peerCertSANs:
      - {{ ansible_fqdn }}
      - {{ hostvars[inventory_hostname]['ansible_eth0']['ipv4']['address'] }}
networking:
    podSubnet: "{{ kubernetes.networking.podCidr }}"
{% if kubernetes.cloudProvider %}
kubeletConfiguration:
  cloudProvider: external
{% endif %}
